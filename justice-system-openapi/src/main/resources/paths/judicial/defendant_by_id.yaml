get:
  tags:
    - Defendant
  summary: Get defendant by id
  description: Retrieves detailed information for a specific defendant identified by the provided ID.
  operationId: getDefendantById
  parameters:
    - name: id
      in: path
      description: "The unique identifier of the defendant for which you want to retrieve the data."
      required: true
      schema:
        type: string
  security:
    - main_auth:
        - read:defendants
    - api_key: [ ]
  responses:
    '200':
      description: Successfully retrieved the defendant information for the specified ID.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/judicial/Defendant.yaml'
    '400':
      description: Bad Request - The request was malformed or contained invalid parameters.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '401':
      description: Unauthorized - Authentication is required or the provided credentials are invalid.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '403':
      description: Forbidden - The authenticated user does not have permission to access this defendant's information.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '404':
      description: Not Found - The specified defendant was not found.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '500':
      description: Internal Server Error - An unexpected error occurred while processing the request.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
put:
  tags:
    - Defendant
  summary: Update defendant data
  description: "This operation allows updating the information in a defendant profile. The update can only be performed by users with appropriate permissions."
  operationId: updateDefendant
  parameters:
    - name: id
      in: path
      description: "The unique identifier of the defendant profile to be updated."
      required: true
      schema:
        type: string
  security:
    - main_auth:
        - 'write:defendants'
  requestBody:
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/judicial/Defendant.yaml'
    description: Updated defendant information including personal details, contact information, and other relevant data.
    required: true
  responses:
    '200':
      description: Successfully updated the defendant profile. Returns the updated defendant object.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/judicial/Defendant.yaml'
    '400':
      description: Bad Request - The request was malformed or contained invalid defendant data.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '401':
      description: Unauthorized - Authentication is required or the provided credentials are invalid.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '403':
      description: Forbidden - The authenticated user does not have permission to update this defendant's information.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '404':
      description: Not Found - The specified defendant was not found.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '409':
      description: Conflict - The update would result in a conflict with existing data.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '500':
      description: Internal Server Error - An unexpected error occurred while processing the request.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
delete:
  tags:
    - Defendant
  summary: Delete a defendant
  description: "This operation permanently deletes all data associated with the requested defendant ID. Only users with appropriate permissions can perform this operation."
  operationId: deleteDefendant
  parameters:
    - name: api_key
      in: header
      required: false
      description: "API key for authentication."
      schema:
        type: string
        example: 'Bearer <TOKEN>'
    - name: id
      in: path
      description: "The unique identifier of the defendant profile to be deleted."
      required: true
      schema:
        type: string
  responses:
    '200':
      $ref: '../../components/schemas/common/Success.yaml'
    '400':
      description: Bad Request - The request was malformed or contained invalid parameters.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '401':
      description: Unauthorized - Authentication is required or the provided credentials are invalid.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '403':
      description: Forbidden - The authenticated user does not have permission to delete this defendant.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '404':
      description: Not Found - The specified defendant was not found.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '500':
      description: Internal Server Error - An unexpected error occurred while processing the request.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
  security:
    - main_auth:
        - 'read:defendants'
        - 'write:defendants'
    - api_key: [ ]
description: Defendant APIs
