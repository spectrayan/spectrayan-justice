get:
  tags:
    - Juror
  summary: Get all jurors
  description: Retrieves a list of all jurors. The response is paginated.
  operationId: getJurors
  x-spring-paginated: true
  security:
    - main_auth:
        - read:jurors
    - api_key: [ ]
  responses:
    '200':
      description: Successfully retrieved the list of jurors.
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '../../components/schemas/judicial/Juror.yaml'
    '400':
      description: Bad Request - The request was malformed or contained invalid parameters.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '401':
      description: Unauthorized - Authentication is required or the provided credentials are invalid.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '403':
      description: Forbidden - The authenticated user does not have permission to access the requested resource.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '404':
      description: Not Found - The specified juror is not found.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '500':
      description: Internal Server Error - An unexpected error occurred while processing the request.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
post:
  tags:
    - Juror
  summary: Create new juror
  description: Creates a new juror profile. The juror information is provided in the request body.
  operationId: createJuror
  security:
    - main_auth:
        - write:jurors
    - api_key: [ ]
  requestBody:
    description: Juror information to be created including personal details, contact information, and other relevant data.
    required: true
    content:
      application/json:
        schema:
          $ref: '../../components/schemas/judicial/Juror.yaml'
  responses:
    '200':
      description: Successfully created the juror profile. Returns the created juror object.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/judicial/Juror.yaml'
    '400':
      description: Bad Request - The request was malformed or contained invalid juror data.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '401':
      description: Unauthorized - Authentication is required or the provided credentials are invalid.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '403':
      description: Forbidden - The authenticated user does not have permission to create jurors.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '409':
      description: Conflict - A juror with the same identifying information already exists.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
    '500':
      description: Internal Server Error - An unexpected error occurred while processing the request.
      content:
        application/json:
          schema:
            $ref: '../../components/schemas/common/ProblemDetail.json'
description: Juror APIs
x-content-type: application/json
x-accepts:
    - application/json
x-tags:
    - tag: Juror
