/**
 * Justice system APIs
 *
 * Contact: admin@spectrayan.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { Disability } from './disability';
import { EmotionalIntelligence } from './emotional-intelligence';
import { Personality } from './personality';
import { Gender } from './gender';
import { SocialBehavior } from './social-behavior';
import { Identity } from './identity';
import { PhysicalTraits } from './physical-traits';
import { PersonTitle } from './person-title';


import * as DisabilityModule from './disability';
import * as EmotionalIntelligenceModule from './emotional-intelligence';
import * as PersonalityModule from './personality';
import * as GenderModule from './gender';
import * as SocialBehaviorModule from './social-behavior';
import * as IdentityModule from './identity';
import * as PhysicalTraitsModule from './physical-traits';
import * as PersonTitleModule from './person-title';
import {FormArray, FormControl, FormGroup, Validators} from "@angular/forms";
import {DocumentData, QueryDocumentSnapshot, SnapshotOptions, Timestamp} from "@angular/fire/firestore";

export interface Person { 
        title?: PersonTitle;
    
        /**
        * Person\'s first name.
        */
        firstName: string;
    
        /**
        * Person\'s middle name.
        */
        middleName?: string;
    
        /**
        * Person\'s last name.
        */
        lastName: string;
    
        gender?: Gender;
    
        identity?: Identity;
    
        personality?: Personality;
    
        emotionalIntelligence?: EmotionalIntelligence;
    
        physicalTraits?: PhysicalTraits;
    
        socialBehavior?: SocialBehavior;
    
        disability?: Disability;
    
        /**
        * General information or biography about the person.
        */
        about?: string;
    
}



// Firestore data converter for Person
export const PersonFirestoreConverter = {
toFirestore(modelObject: Person): DocumentData {
const result: DocumentData = {};
        if (modelObject.title !== undefined) {
        
        result['title'] = modelObject.title;
        }
        if (modelObject.firstName !== undefined) {
                    result['firstName'] = modelObject.firstName;
        }
        if (modelObject.middleName !== undefined) {
                    result['middleName'] = modelObject.middleName;
        }
        if (modelObject.lastName !== undefined) {
                    result['lastName'] = modelObject.lastName;
        }
        if (modelObject.gender !== undefined) {
        
        result['gender'] = modelObject.gender;
        }
        if (modelObject.identity !== undefined) {
        
        result['identity'] = modelObject.identity;
        }
        if (modelObject.personality !== undefined) {
        
        result['personality'] = modelObject.personality;
        }
        if (modelObject.emotionalIntelligence !== undefined) {
        
        result['emotionalIntelligence'] = modelObject.emotionalIntelligence;
        }
        if (modelObject.physicalTraits !== undefined) {
        
        result['physicalTraits'] = modelObject.physicalTraits;
        }
        if (modelObject.socialBehavior !== undefined) {
        
        result['socialBehavior'] = modelObject.socialBehavior;
        }
        if (modelObject.disability !== undefined) {
        
        result['disability'] = modelObject.disability;
        }
        if (modelObject.about !== undefined) {
                    result['about'] = modelObject.about;
        }
return result;
},
fromFirestore(snapshot: QueryDocumentSnapshot, options: SnapshotOptions): Person {
const data = snapshot.data(options);
return {
    
            
            title: data['title'],
    
                    firstName: data['firstName'],
    
                    middleName: data['middleName'],
    
                    lastName: data['lastName'],
    
            
            gender: data['gender'],
    
            
            identity: data['identity'],
    
            
            personality: data['personality'],
    
            
            emotionalIntelligence: data['emotionalIntelligence'],
    
            
            physicalTraits: data['physicalTraits'],
    
            
            socialBehavior: data['socialBehavior'],
    
            
            disability: data['disability'],
    
                    about: data['about'],
    } as Person;
    }

};

