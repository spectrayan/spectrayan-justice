/**
 * Justice system APIs
 *
 * Contact: admin@spectrayan.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
import { AddressType } from './address-type';


import * as AddressTypeModule from './address-type';
import {FormArray, FormControl, FormGroup, Validators} from "@angular/forms";
import {DocumentData, QueryDocumentSnapshot, SnapshotOptions, Timestamp} from "@angular/fire/firestore";

export interface Address { 
        type?: AddressType;
    
        addressLine1: string;
    
        addressLine2?: string;
    
        city: string;
    
        state: string;
    
        zipCode: string;
    
        country: string;
    
}

export type AddressFormType = FormGroup<{ 
    type: FormControl<AddressType|null>;

    addressLine1: FormControl<string>;

    addressLine2: FormControl<string|null>;

    city: FormControl<string>;

    state: FormControl<string>;

    zipCode: FormControl<string>;

    country: FormControl<string>;
 }>

export function getAddressForm(): AddressFormType {
    return new FormGroup({ 
    type: new FormControl<AddressType>("Home", {  nonNullable:   false ,
    validators: [ ] } ),
    

    addressLine1: new FormControl<string>("", {  nonNullable:  true  ,
    validators: [  Validators.required, ] } ),
    

    addressLine2: new FormControl<string>("", {  nonNullable:   false ,
    validators: [ ] } ),
    

    city: new FormControl<string>("", {  nonNullable:  true  ,
    validators: [  Validators.required, ] } ),
    

    state: new FormControl<string>("", {  nonNullable:  true  ,
    validators: [  Validators.required, ] } ),
    

    zipCode: new FormControl<string>("", {  nonNullable:  true  ,
    validators: [  Validators.required, ] } ),
    

    country: new FormControl<string>("", {  nonNullable:  true  ,
    validators: [  Validators.required, ] } ),
    
    })
}


// Firestore data converter for Address
export const AddressFirestoreConverter = {
toFirestore(modelObject: Address): DocumentData {
const result: DocumentData = {};
        if (modelObject.type !== undefined) {
        
        result['type'] = modelObject.type;
        }
        if (modelObject.addressLine1 !== undefined) {
                    result['addressLine1'] = modelObject.addressLine1;
        }
        if (modelObject.addressLine2 !== undefined) {
                    result['addressLine2'] = modelObject.addressLine2;
        }
        if (modelObject.city !== undefined) {
                    result['city'] = modelObject.city;
        }
        if (modelObject.state !== undefined) {
                    result['state'] = modelObject.state;
        }
        if (modelObject.zipCode !== undefined) {
                    result['zipCode'] = modelObject.zipCode;
        }
        if (modelObject.country !== undefined) {
                    result['country'] = modelObject.country;
        }
return result;
},
fromFirestore(snapshot: QueryDocumentSnapshot, options: SnapshotOptions): Address {
const data = snapshot.data(options);
return {
    
            
            type: data['type'],
    
                    addressLine1: data['addressLine1'],
    
                    addressLine2: data['addressLine2'],
    
                    city: data['city'],
    
                    state: data['state'],
    
                    zipCode: data['zipCode'],
    
                    country: data['country'],
    } as Address;
    }

};

