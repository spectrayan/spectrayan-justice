/**
 * Justice system APIs
 *
 * Contact: admin@spectrayan.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


/**
 * Record of evidence custody transfer
 */
import {FormArray, FormControl, FormGroup, Validators} from "@angular/forms";
import {DocumentData, QueryDocumentSnapshot, SnapshotOptions, Timestamp} from "@angular/fire/firestore";

export interface CustodyRecord { 
        /**
        * Date and time of custody transfer
        */
        transferDate: Date;
    
        /**
        * ID of the person transferring custody
        */
        fromPersonId: string;
    
        /**
        * ID of the person receiving custody
        */
        toPersonId: string;
    
        /**
        * Reason for the custody transfer
        */
        reason?: string;
    
        /**
        * Location where the transfer occurred
        */
        location?: string;
    
        /**
        * Additional notes about the transfer
        */
        notes?: string;
    
}

export type CustodyRecordFormType = FormGroup<{ 
    transferDate: FormControl<Date>;

    fromPersonId: FormControl<string>;

    toPersonId: FormControl<string>;

    reason: FormControl<string|null>;

    location: FormControl<string|null>;

    notes: FormControl<string|null>;
 }>

export function getCustodyRecordForm(): CustodyRecordFormType {
    return new FormGroup({ 
    transferDate: new FormControl<Date>(new Date(), {  nonNullable:  true  ,
    validators: [  Validators.required, ] } ),
    

    fromPersonId: new FormControl<string>("", {  nonNullable:  true  ,
    validators: [  Validators.required, ] } ),
    

    toPersonId: new FormControl<string>("", {  nonNullable:  true  ,
    validators: [  Validators.required, ] } ),
    

    reason: new FormControl<string>("", {  nonNullable:   false ,
    validators: [ ] } ),
    

    location: new FormControl<string>("", {  nonNullable:   false ,
    validators: [ ] } ),
    

    notes: new FormControl<string>("", {  nonNullable:   false ,
    validators: [ ] } ),
    
    })
}


// Firestore data converter for CustodyRecord
export const CustodyRecordFirestoreConverter = {
toFirestore(modelObject: CustodyRecord): DocumentData {
const result: DocumentData = {};
        if (modelObject.transferDate !== undefined) {
                    result['transferDate'] = modelObject.transferDate;
        }
        if (modelObject.fromPersonId !== undefined) {
                    result['fromPersonId'] = modelObject.fromPersonId;
        }
        if (modelObject.toPersonId !== undefined) {
                    result['toPersonId'] = modelObject.toPersonId;
        }
        if (modelObject.reason !== undefined) {
                    result['reason'] = modelObject.reason;
        }
        if (modelObject.location !== undefined) {
                    result['location'] = modelObject.location;
        }
        if (modelObject.notes !== undefined) {
                    result['notes'] = modelObject.notes;
        }
return result;
},
fromFirestore(snapshot: QueryDocumentSnapshot, options: SnapshotOptions): CustodyRecord {
const data = snapshot.data(options);
return {
    
                    transferDate: data['transferDate'] ? (data['transferDate'] as Timestamp).toDate() : undefined,
    
                    fromPersonId: data['fromPersonId'],
    
                    toPersonId: data['toPersonId'],
    
                    reason: data['reason'],
    
                    location: data['location'],
    
                    notes: data['notes'],
    } as CustodyRecord;
    }

};

